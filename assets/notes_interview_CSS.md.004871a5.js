import{_ as s,c as n,o as a,b as l}from"./app.01453473.js";const F=JSON.parse('{"title":"收集点面试题（CSS篇）","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. ==如何优化CSS性能？有哪些常用的优化技巧？==","slug":"_1-如何优化css性能-有哪些常用的优化技巧","link":"#_1-如何优化css性能-有哪些常用的优化技巧","children":[]},{"level":2,"title":"2. ==如何实现一个响应式布局？能否具体说说实现方法和相关技术？==","slug":"_2-如何实现一个响应式布局-能否具体说说实现方法和相关技术","link":"#_2-如何实现一个响应式布局-能否具体说说实现方法和相关技术","children":[]},{"level":2,"title":"3. ==你对CSS盒模型有了解吗？可以简单介绍一下盒模型的概念和组成部分吗？==","slug":"_3-你对css盒模型有了解吗-可以简单介绍一下盒模型的概念和组成部分吗","link":"#_3-你对css盒模型有了解吗-可以简单介绍一下盒模型的概念和组成部分吗","children":[]},{"level":2,"title":"4. ==对HTML语义化的理解是什么？并给出一个实际应用的例子。==","slug":"_4-对html语义化的理解是什么-并给出一个实际应用的例子。","link":"#_4-对html语义化的理解是什么-并给出一个实际应用的例子。","children":[]},{"level":2,"title":"5. ==介绍一下回流和重绘==","slug":"_5-介绍一下回流和重绘","link":"#_5-介绍一下回流和重绘","children":[{"level":3,"title":"如何避免？","slug":"如何避免","link":"#如何避免","children":[]},{"level":3,"title":"==拓展：CSS3 硬件加速==","slug":"拓展-css3-硬件加速","link":"#拓展-css3-硬件加速","children":[]}]},{"level":2,"title":"6. ==如何实现一个元素的水平垂直居中==","slug":"_6-如何实现一个元素的水平垂直居中","link":"#_6-如何实现一个元素的水平垂直居中","children":[]},{"level":2,"title":"7.==啊啊啊==","slug":"_7-啊啊啊","link":"#_7-啊啊啊","children":[]}],"relativePath":"notes/interview/CSS.md","lastUpdated":1678380106000}'),o={name:"notes/interview/CSS.md"},e=l(`<h1 id="收集点面试题-css篇" tabindex="-1">收集点面试题（CSS篇） <a class="header-anchor" href="#收集点面试题-css篇" aria-hidden="true">#</a></h1><hr><h2 id="_1-如何优化css性能-有哪些常用的优化技巧" tabindex="-1">1. ==如何优化CSS性能？有哪些常用的优化技巧？== <a class="header-anchor" href="#_1-如何优化css性能-有哪些常用的优化技巧" aria-hidden="true">#</a></h2><ol><li><strong>拆分样式</strong>，避免过多的选择器嵌套，嵌套过多会导致 CSS 解析和渲染变慢。</li><li><a href="#reflow"> 减少<strong>重排(回流)<strong>操作，以及减少不必要的</strong>重绘</strong>。</a></li><li>避免使用<strong>昂贵的CSS属性和值</strong>，比如 box-shadow、border-radius、text-shadow 等属性在某些情况下可能会对性能产生较大影响，因此需要在使用时谨慎选择。</li><li><strong>压缩 CSS 文件</strong>，压缩CSS可以减少文件大小，从而减少网络传输时间，加快页面加载速度。（ Gzip ）</li><li>使用浏览器的<strong>开发者工具</strong>，浏览器的开发者工具可以帮助我们<strong>分析和优化CSS性能</strong>。我们可以通过开发者工具的性能分析工具，找出慢的CSS选择器和属性，然后进行优化。</li><li>利用<strong>继承机制</strong>，父元素定义了子元素就不用定义。</li></ol><h2 id="_2-如何实现一个响应式布局-能否具体说说实现方法和相关技术" tabindex="-1">2. ==如何实现一个响应式布局？能否具体说说实现方法和相关技术？== <a class="header-anchor" href="#_2-如何实现一个响应式布局-能否具体说说实现方法和相关技术" aria-hidden="true">#</a></h2><ol><li><p>使用 CSS3 媒体查询，在 CSS 中使用 <code>@media</code> 根据不同的设备宽高来设置不同的样式</p></li><li><p>使用 Rem 相对单位，Rem 是相对于 HTML 也就是 <strong>根元素</strong> 的字体大小来计算的元素尺寸，可以结合媒体查询动态设置根元素的 font-size 。</p></li><li><p>使用 flex 弹性布局。</p><blockquote><p>Flex 布局是一种基于 <strong>弹性盒子</strong> 模型的布局方式，通过设置容器的 <code>display</code> 属性为 flex，即可将子元素<strong>排列成一行或一列</strong>，并通过设置一些属性来控制子元素的位置、大小、顺序等。</p></blockquote></li><li><p>使用 grid 栅格布局。</p><blockquote><p>Grid 布局是一种基于 <strong>网格</strong> 模型的布局方式，通过设置容器的 display 属性为 grid，即可将子元素排列成 <strong>二维网格</strong>，并通过设置一些属性来控制子元素在网格中的位置、大小、顺序等。</p></blockquote></li></ol><h2 id="_3-你对css盒模型有了解吗-可以简单介绍一下盒模型的概念和组成部分吗" tabindex="-1">3. ==你对CSS盒模型有了解吗？可以简单介绍一下盒模型的概念和组成部分吗？== <a class="header-anchor" href="#_3-你对css盒模型有了解吗-可以简单介绍一下盒模型的概念和组成部分吗" aria-hidden="true">#</a></h2><p>CSS 盒模型就是描述了一个 HTML 元素的大小和组成部分，一般包括了 <strong>内容区域、内外边距、边框。</strong></p><p>同时，盒模型分为 <strong>怪异盒模型</strong>(IE) 和 <strong>标准盒模型</strong>(W3C) ，标准盒模型就是指元素的宽高只包含 <strong>内容区域</strong>，而怪异盒模型的元素宽高包括了 <strong>内容区域、边框、内边距</strong> 这三样。</p><p>通过 <code>box-sizing</code> 属性来切换不同的盒模型。</p><h2 id="_4-对html语义化的理解是什么-并给出一个实际应用的例子。" tabindex="-1">4. ==对HTML语义化的理解是什么？并给出一个实际应用的例子。== <a class="header-anchor" href="#_4-对html语义化的理解是什么-并给出一个实际应用的例子。" aria-hidden="true">#</a></h2><p>语义化就是使用一些 <strong>见名知意</strong> 的html标签来搭建网页结构，比如 <code>header</code>，<code>nav</code>，<code>section</code>，<code>side</code>，<code>article</code> 等标签来构建网页布局。HTML语义化标签的确能够增加页面的可读性，可维护性和可访问性，同时也更有利于 <strong>SEO</strong>。</p><p>例子：如果你正在开发一个博客网站，那么可以使用 <code>&lt;header&gt;</code>标签来包含博客标题和描述，使用<code>&lt;nav&gt;</code>标签包含导航栏，使用<code>&lt;article&gt;</code>标签包含博客正文，使用<code>&lt;aside&gt;</code>标签包含侧边栏信息，</p><h2 id="_5-介绍一下回流和重绘" tabindex="-1"><a id="reflow" href="https://blog.csdn.net/weixin_48491416/article/details/123452651">5. ==介绍一下回流和重绘==</a> <a class="header-anchor" href="#_5-介绍一下回流和重绘" aria-hidden="true">#</a></h2><ol><li>浏览器会把获取到的HTML代码解析成一个<strong>DOM树</strong>，html中的每一个元素都是DOM树的一个节点，根节点也就是我们说的document对象。在渲染树中的一部分（或者全部）因为元素的规模<strong>尺寸</strong>、<strong>布局</strong> 、<strong>显隐</strong>等改变而需要重新构建，这就称为回流。</li><li>在渲染树中的一些元素需要更新属性，而这些属性只是影响元素的外观、风格，不影响布局，就称为重绘。</li></ol><blockquote><p>回流必定会引起重绘，重绘一定不会引起回流</p><p>回流会导致页面重排，影响性能</p></blockquote><h3 id="如何避免" tabindex="-1">如何避免？ <a class="header-anchor" href="#如何避免" aria-hidden="true">#</a></h3><ol><li>避免使用 table 布局，一个动全都动。</li><li>将动画效果应用到 position 属性为 absolute 或 fixed 的元素上，因为他们本身就脱离了文档流。</li><li>避免频繁操作样式，最好<strong>一次性</strong>重写style属性，或者将样式列表定义为class并一次性更改class属性。</li><li>也可以先为元素<strong>设置display: none</strong>，操作结束后再把它显示出来。因为在display属性为none的元素上进行的DOM操作不会引发回流和重绘。</li></ol><h3 id="拓展-css3-硬件加速" tabindex="-1">==拓展：CSS3 硬件加速== <a class="header-anchor" href="#拓展-css3-硬件加速" aria-hidden="true">#</a></h3><p>比起考虑如何减少回流重绘，我们更期望的是，根本不要回流重绘。</p><ol><li><p>使用css3硬件加速，可以让 <strong>transform、opacity、filters</strong> 这些动画不会引起回流重绘 。</p></li><li><p>对于动画的其它属性，比如 background-color 这些，还是会引起重绘的，不过它还是可以提升这些动画的性能。</p></li></ol><p>常见的触发硬件加速的 CSS 属性：</p><ul><li><strong>transform</strong></li><li><strong>opacity</strong></li><li>filters</li><li>Will-change</li></ul><h2 id="_6-如何实现一个元素的水平垂直居中" tabindex="-1">6. ==如何实现一个元素的水平垂直居中== <a class="header-anchor" href="#_6-如何实现一个元素的水平垂直居中" aria-hidden="true">#</a></h2><ol><li>使用 flex 布局 (常规)</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">contianer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100vh</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/** 要有高度 **/</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>使用 absolute + transform</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">contianer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>使用 grid 布局</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">place-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>使用 flex 布局 (auto)</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">contianer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100vh</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/** 要有高度 **/</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>记得研究</p></blockquote><h2 id="_7-啊啊啊" tabindex="-1">7.==啊啊啊== <a class="header-anchor" href="#_7-啊啊啊" aria-hidden="true">#</a></h2>`,34),p=[e];function t(r,c,i,D,C,y){return a(),n("div",null,p)}const h=s(o,[["render",t]]);export{F as __pageData,h as default};
